{{- if .Values.loadGenerator.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.loadGenerator.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "microservice-demo.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ .Values.loadGenerator.name }}
  annotations:
    metoro.source.repository.base64: Z2l0aHViLmNvbS9tZXRvcm8taW8vbWV0b3JvLWRlYnVnZ2luZy1zY2VuYXJpbwo=
spec:
  replicas: {{ .Values.loadGenerator.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.loadGenerator.name }}
      app.kubernetes.io/part-of: microservice-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.loadGenerator.name }}
        app.kubernetes.io/part-of: microservice-demo
    spec:
      containers:
        - name: {{ .Values.loadGenerator.name }}
          image: "{{ .Values.loadGenerator.image.repository }}:{{ .Values.loadGenerator.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: GATEWAY_SERVICE
              value: "http://{{ .Values.gateway.name }}:{{ .Values.gateway.service.port }}"
            - name: DELAY_BETWEEN_USERS
              value: "{{ .Values.loadGenerator.delayBetweenUsers }}"
            - name: METRICS_PORT
              value: "{{ .Values.loadGenerator.metricsPort }}"
          resources:
            {{- toYaml .Values.loadGenerator.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.loadGenerator.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "microservice-demo.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ .Values.loadGenerator.name }}
spec:
  type: {{ .Values.loadGenerator.service.type }}
  ports:
    - port: {{ .Values.loadGenerator.service.port }}
      targetPort: {{ .Values.loadGenerator.metricsPort }}
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: {{ .Values.loadGenerator.name }}
    app.kubernetes.io/part-of: microservice-demo
{{- end }} 